#Rascunho da aula 09.

#frase será a variável utilizada.

#Cadeia de texto, ou string, pode ser fatiada. O comando frase[9] irá mostrar somente a letra da posição 9. O comando frase[9:13] irá mostrar do 9 até o 12, sem contar o 13. Caso utilize frase[9:21:2] ele vai do 9 até o 20, pulando de 2 em 2. 0 é o caractere inicial. Se eu utilizo frase[:5] ele irá começar do 0 e vai até o 4. Do mesmo modo para frase[5:], que nos diz que começa do 5 e vai até o final. Como o caractere inicial é 0, quando colocamos 14 é como se ele fosse somente até o 13, pois começa do 0.
#Como analisar uma string podemos utilizar a função len(frase), que nos diz qual o comprimento da frase, contando seus espaços/caracteres. Outra função é o count, usando frase.count('o'), que vai contar quantas vezes aparece a letra o. Nessa função count podemos utilizar, também, qual parte da string queremos verificar se tem ou não a letra, usando frase.count('o',0,13), que vai do 0 até o 12, contando quantas letras o. A função find nos retorna em qual posição começou alguma parte do que queremos, por exemplo, frase.find('deo'), ele irá buscar qual caractere inicial a sequência "deo" e retorna o caractere. Nesta última função, se o valor retornado foi -1 é porque significa que não existe. 'Curso' in frase, para verificar se existe tal palavra na frase.
#Outra forma de mexer com string é com transformações, utilizando a função replace nós podemos trocar a posição de letras ou palavras, como frase.replace('Python','Android'), que ele irá procurar Python e irá substituir por Android. Outras funcionalidades de transformação é o upper, que transforma em maiúsculo, como em frase.upper() que vai transformar todas as letras em maiusculas. Do mesmo modo vale para frase.lower(), que transforma em minuscula. Outro método/função é a capitalize (frase.capitalize()), que transforma toda a frase em minúscula e deixa somente a primeira letra maiúscula. já o método frase.title() ele transforma as primeiras letras de cada palavra maiúscula e o resto em minuscula. A diferença da title para capitalize é que, enquanto a capitalize transforma tudo em minusculo, deixando somente a posição 0 maiuscula, a função title deixa o inicio de todas as palavras em maiusculo, utilizando a verificação dos espaços para isso. Outra função importante é a strip, com frase.strip() ele retira os espaços desnecessários de antes e após o final da frase. Há algumas variações no strip, que podemos usar rstrip e lstrp, que irá remover somente os espaços do lado direito da frase ou lado esquerdo da frase, respectivamente.
#Outra forma de manipulação é a divisão, com o método split, sendo frase.split(), que vai separar a frase em várias listas diferentes. 'Curso em Vídeo' em 'Curso' 'em' 'Vídeo'. De forma análoga, temos o join(frase), que podemos fazer '-'.join(frase) e irá colocar o - no lugar dos espaços.

#Quando tem uma frase longa que quer utilizar no print, utilizar o """ pode facilitar, pois ele irá "selecionar" tudo do inicio das 3 aspas até o final.

#A função replace não altera a string, ela só é utilizada para a situação especifica. Para salvar tem que utilizar frase = frase.replace('Python', 'Android'). Uma string é imutável.
#'Curso' in frase, isto vai nos retornar True ou False. Já no frase.find('Curso') irá retornar a posição inicial ou -1. Vale lembrar que pode utilizar vários métodos em conjunto. frase.lower().find('curso'), por exemplo.